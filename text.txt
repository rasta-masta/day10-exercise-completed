 const [list, setList] =useState ([])

  const getData = async() => {
    try {
      // const response = await fetch("https://jsonplaceholder.typicode.com/posts")
      // const data = await response.json() 
     
      const { data } = await axios.get("https://jsonplaceholder.typicode.com/posts") 
      setList(data)
    }catch (err) {
      console.log(err)
    }
  }
  console.log(list)

  useEffect(()=> {
    getData()
  },[])
  
  return (
  
      <div>
        
        <Formulir/>
      </div>

============================================
export const fetchCartData = createAsyncThunk("cart/fetchCartData", async () => {
  const response = await fetch("http://localhost:2000/carts");
  const data = await response.json();
  return data;
});

const cartSlice = createSlice({
  name: "cart",
  initialState: {
    data: [],
    status: "idle", // Possible values: "idle", "loading", "succeeded", "failed"
    error: null,
  },
  reducers: {},
  extraReducers: (builder) => {
    builder
      .addCase(fetchCartData.pending, (state) => {
        state.status = "loading";
      })
      .addCase(fetchCartData.fulfilled, (state, action) => {
        state.status = "succeeded";
        state.data = action.payload;
      })
      .addCase(fetchCartData.rejected, (state, action) => {
        state.status = "failed";
        state.error = action.error.message;
      });
  },
});

export default cartSlice.reducer;
